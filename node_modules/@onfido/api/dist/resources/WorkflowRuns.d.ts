import { AxiosInstance } from "axios";
import { Resource } from "../Resource";
export declare type WorkflowRunRequest = {
    applicantId: string;
    workflowId: string;
    customData?: any;
};
declare type WorkflowRunError = {
    type: string;
    message: string;
};
declare type WorkflowRunLink = {
    url: string;
    completed_redirect_url: string;
    expired_redirect_url: string;
    expires_at: string;
    language: string;
};
export declare type WorkflowRun = {
    id: string;
    applicantId: string;
    workflowId: string;
    workflowVersionId: number;
    dashboardUrl: string;
    status: string;
    output: any;
    reasons: string[] | null;
    error: WorkflowRunError | null;
    link: WorkflowRunLink | null;
    createdAt: string;
    updatedAt: string;
};
export declare type WorkflowRunListRequest = {
    page?: number;
    status?: string;
    created_at_gt?: string;
    created_at_lt?: string;
};
export declare class WorkflowRuns extends Resource<WorkflowRunRequest> {
    constructor(axiosInstance: AxiosInstance);
    create(workflowRunRequest: WorkflowRunRequest): Promise<WorkflowRun>;
    find(id: string): Promise<WorkflowRun>;
    list(queryParams?: WorkflowRunListRequest): Promise<WorkflowRun[]>;
}
export {};
